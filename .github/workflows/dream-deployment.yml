name: DREAM Deployment

on:
  release:
    types:
      - created

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  deploy-linux-matlab:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - run: |
        sudo apt -yq update
        sudo apt install -yq --no-install-recommends libfftw3-dev

    # Sets up MATLAB on the GitHub Actions runner
    - name: Setup MATLAB
      uses: matlab-actions/setup-matlab@v1

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS="-O3" -DBUILD_MEX=on -DBUILD_OCT=off

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Create zip file
      run: |
        mkdir dream-${{ github.event.release.tag_name }}-matlab-linux-x86_64
        cp -v ${{github.workspace}}/build/*.mexa64 dream-${{ github.event.release.tag_name }}-matlab-linux-x86_64/
        zip -r dream-${{ github.event.release.tag_name }}-matlab-linux-x86_64.zip dream-${{ github.event.release.tag_name }}-matlab-linux-x86_64

    - name: Upload DREAM MATLAB Linux release binary
      uses: actions/upload-release-asset@v1.1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/dream-${{ github.event.release.tag_name }}-matlab-linux-x86_64.zip
        asset_name: dream-${{ github.event.release.tag_name }}-matlab-linux-x86_64.zip
        asset_content_type: binary/octet-stream

  deploy-macos-matlab:

    runs-on: macos-11

    steps:
    - uses: actions/checkout@v3

    - name: Install deps
      run: |
        sudo conda install -c conda-forge fftw

    - name: Setup MATLAB
      uses: matlab-actions/setup-matlab@v1

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS="-O3" -DBUILD_MEX=on -DBUILD_OCT=off

    - name: CMake Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Create zip file
      run: |
        mkdir dream-${{ github.event.release.tag_name }}-matlab-macos-x86_64
        cp -v ${{github.workspace}}/build/*.mexmaci64 dream-${{ github.event.release.tag_name }}-matlab-macos-x86_64/
        zip -r dream-${{ github.event.release.tag_name }}-matlab-macos-x86_64.zip dream-${{ github.event.release.tag_name }}-matlab-macos-x86_64

    - name: Upload DREAM MATLAB macOS release binary
      uses: actions/upload-release-asset@v1.1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/dream-${{ github.event.release.tag_name }}-matlab-macos-x86_64.zip
        asset_name: dream-${{ github.event.release.tag_name }}-matlab-macos-x86_64.zip
        asset_content_type: binary/octet-stream

  deploy-windows-matlab:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v3

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: latest
        activate-environment: test

    - name: Install deps
      shell: powershell
      run: |
        conda install -c conda-forge fftw
        conda install -c conda-forge m2-zip

    # Sets up MATLAB on the GitHub Actions runner
    - name: Setup MATLAB
      uses: matlab-actions/setup-matlab@v1

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS="-O3" -DBUILD_MEX=on -DBUILD_OCT=off

    - name: CMake Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Create zip file
      run: |
        mkdir dream-${{ github.event.release.tag_name }}-matlab-windows-x86_64
        cp -v ${{github.workspace}}/build/Release/*.mexw64 dream-${{ github.event.release.tag_name }}-matlab-windows-x86_64/
        zip -r dream-${{ github.event.release.tag_name }}-matlab-windows-x86_64.zip dream-${{ github.event.release.tag_name }}-matlab-windows-x86_64

    - name: Upload DREAM MATLAB Windows release binary
      uses: actions/upload-release-asset@v1.1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/dream-${{ github.event.release.tag_name }}-matlab-windows-x86_64.zip
        asset_name: dream-${{ github.event.release.tag_name }}-matlab-windows-x86_64.zip
        asset_content_type: binary/octet-stream

  linux-user-manual:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install LaTeX
      run: |
        sudo apt -yq update
        sudo apt install texlive-full

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: CMake Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_MEX=off -DBUILD_OCT=off -DBUILD_USERMAN=on

    - name: CMake Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload DREAM user manual
      uses: actions/upload-release-asset@v1.1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/build/dream_userman.pdf
        asset_name: dream-${{ github.event.release.tag_name }}-dream_userman.pdf
        asset_content_type: binary/octet-stream
